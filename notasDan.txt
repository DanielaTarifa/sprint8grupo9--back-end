USUARIOS-API-CONTROLLERS

listar:(req,res)=>{
        db.Users.findAll()
        .then(listarUser => {
            
            

            let respuesta={
                meta: {
                    status :200,
                    count:listarUser.length,
                },
                data:{list:[]}
                
            }
            
            listarUser.forEach(user=>{
                respuesta.data.list.push({
                    id:user.id,
                    name:user.name,
                    userName:user.userName,
                    email:user.email,
                    detail:`api/listarUser`
                })
                return user
            })

            return res.status(200).json(respuesta)
        })
        .catch(error => {res.send({error:'Not found'});})
        
    },

    ---
    listar:(req,res)=>{
        db.Users.findAll()
        .then(listarUser => {
            let array=[]
            let forFunction= () =>{
                for(let usuario of listarUser){
                    let unUser={
                        id:usuario.id,
                        name:usuario.name,
                        userName:usuario.userName,
                        email:usuario.email,
                        detail: 'api/listarUser'+ usuario.id
                    }
                    array.push(unUser)
                }
                //return unUser
            
            
            let respuesta={
                meta: {
                    status : 200,
                    count: listarUser.length,
                },
                users:
                    array
                
                
                
            }
        
            return res.status(200).json(respuesta)
        }
        })
        
        
    },
    ---
    /*
        let pedidoProducto= Products.findByPk(req.params.id);
        let pedidoListas= Products.findAll();
        let promesaCuotas= Numbersofinstallments.findAll();
        let promesaSections= Sections.findAll();
        let promesaCategories= Categories.findAll();
        
        Promise.all([pedidoProducto, pedidoListas, promesaCuotas, promesaSections, promesaCategories])
        .then(function([ producto, productos, cuotas, secciones, categorias]) {
            
            let array=[]
                for(let i=0; i < categorias.length; i++){
                    let unCatego={
                        name:(producto.categoryId ==categorias.id ?categorias[i].name:0) ,
                    }
                    
                    array.push(unCatego)
                }
            
            let respuesta={
                infoProduct: producto,
                arrays: array,
                imagen: '/public/img/' + producto.img ,
            }
            return res.status(200).json(respuesta)
        })
        .catch(error => {res.send({error:'Not found'});})  */

        ---paso a include el liistado de prod--
        
    listado:(req,res)=>{//listado para los admi

        let pedidoProducto= Products.findByPk(req.params.id);
        let pedidoListas= Products.findAll();
        let promesaCuotas= Numbersofinstallments.findAll();
        let promesaSections= Sections.findAll();
        let promesaCategories= Categories.findAll();
        
        Promise.all([pedidoProducto, pedidoListas, promesaCuotas, promesaSections, promesaCategories])
        .then(function([ producto, productos, cuotas, secciones, categorias]) {
        
            //t-t no me sale countCategory
            //let countCategory={

                //Mouse: (categorias.name === 'mouse' ? categorias.length : 0),
                //Teclado: (categorias.id === [16] ? categorias.name.length : 0)
            //Mouse: (productos.categoryId == categorias.id && (categorias.name === 'Mouse') ?categorias.length  : 0)
            
            //}
            
            let arrayProd=[]
                for(let i=0; i < productos.length; i++){
                    let unProduct={
                        id:productos[i].id,
                        name:productos[i].name,
                        description:productos[i].description,
                        category:productos[i].categoryId,//quiero ver el name, ver consigna
                        detail: `http://localhost:3000/api/productos/`+ productos[i].id
                    }
                    arrayProd.push(unProduct)
                }
                let respuestaProduct={
                    count: productos.length,
                    countByCategory: categorias.length,
                    users: arrayProd
                }
            return res.status(200).json(respuestaProduct)
        })

        .catch(error => {res.send({error:'Not found'});})
    },


    ----multerrutas producto-
    const { body } = require('express-validator');

var storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, './public/img')
  },
  filename: function (req, file, cb) {
    cb(null, file.fieldname + '-' + Date.now())
  }
})

var upload = multer({ storage: storage })

//middleware
----
/*let countByCategorys = [
                {mouse: productos.Category[1].length || 0},
                {teclado: productos.Category[2].length || 0},
                {auriculares: productos.Category[3].length || 0},
                {cpu: productos.Category[4].length || 0},
                {placaDeVideo: productos.Category[5].length || 0},
                {procesador: productos.Category[6].length || 0},
                {pantalla: productos.Category[7].length || 0},
                {kitCombo: productos.Category[8].length || 0}
            ]*/
            /*let mouse= productos.count({
                where: {categoryId:1}
            })*/